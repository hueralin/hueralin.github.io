<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>随便学学 on 狐耳的雪原</title>
    <link>https://hueralin.github.io/categories/%E9%9A%8F%E4%BE%BF%E5%AD%A6%E5%AD%A6/</link>
    <description>Recent content in 随便学学 on 狐耳的雪原</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 21 Aug 2019 16:09:41 +0800</lastBuildDate>
    
	<atom:link href="https://hueralin.github.io/categories/%E9%9A%8F%E4%BE%BF%E5%AD%A6%E5%AD%A6/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Mock 前端假数据</title>
      <link>https://hueralin.github.io/2019/mock/</link>
      <pubDate>Wed, 21 Aug 2019 16:09:41 +0800</pubDate>
      
      <guid>https://hueralin.github.io/2019/mock/</guid>
      <description>为什么需要前端做假数据？Emmmm，不用我说了吧～
 官方文档看这里MockJs！
数据模版之类的语法去看官方文档，我这里只简单介绍一下我的使用情况。</description>
    </item>
    
    <item>
      <title>Array</title>
      <link>https://hueralin.github.io/2019/array/</link>
      <pubDate>Mon, 19 Aug 2019 15:46:37 +0800</pubDate>
      
      <guid>https://hueralin.github.io/2019/array/</guid>
      <description>Array Emmmm, Array的函数不少，至少我觉的是这样。随着ES的发展，Array多了许多奇奇怪怪的函数。
虽说奇怪&amp;hellip;.但用起来超爽的啊！！！！
什么？想要查找数组中的某个元素？ Array.find() 拿走不送！（ES6）
该函数接受两个参数：callback、thisObj
在回调函数中return符合查找条件的元素，若查找成功则直接返回该元素的值，否则返回undefined，并且不会改变原素组，简直不要太爽！
如果想要查找某个元素的索引的话，可以使用 Array.findIndex() 函数，找不到的话返回-1。
增删元素类（改变原数组）  push() 在后面插入
 unshift() 在前面插入
 pop() 在后面弹出 shift() 在前面弹出  元素查找类  find(callback) 通过callback的逻辑，查找满足条件的元素，返回“值”
 findIndex(callback) 通过callback的逻辑，查找满足条件的元素，返回“索引“ includes(item) 查找是否有item，返回布尔值
 indexOf(item) 查找是否有item，返回下标
  数组遍历类 &amp;mdash; forEach() &amp;mdash;
let a = [1,2,3,4,5] a.forEach((item, index, arr) =&amp;gt; { console.log(item) // 1,2,3,4,5 }) /* forEach 遍历的范围在第一次调用 callback 前就会确定,所以后续调用中 添加 和 删除 的item都不会被遍历到 */ a.forEach((item, index, arr) =&amp;gt; { arr.</description>
    </item>
    
  </channel>
</rss>